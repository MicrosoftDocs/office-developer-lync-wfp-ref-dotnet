<Type Name="GroupByContactsAndGroupsManagerBase&lt;T&gt;" FullName="Microsoft.Lync.Controls.Internal.ViewModel.GroupByContactsAndGroupsManagerBase&lt;T&gt;">
  <TypeSignature Language="C#" Value="public abstract class GroupByContactsAndGroupsManagerBase&lt;T&gt; : IDisposable, Microsoft.Lync.Controls.Internal.ViewModel.ISortableContactsAndGroupManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit GroupByContactsAndGroupsManagerBase`1&lt;T&gt; extends System.Object implements class Microsoft.Lync.Controls.Internal.ViewModel.ISortableContactsAndGroupManager, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Lync.Controls.Internal.ViewModel.GroupByContactsAndGroupsManagerBase`1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class GroupByContactsAndGroupsManagerBase(Of T)&#xA;Implements IDisposable, ISortableContactsAndGroupManager" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class GroupByContactsAndGroupsManagerBase abstract : IDisposable, Microsoft::Lync::Controls::Internal::ViewModel::ISortableContactsAndGroupManager" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Lync.Controls</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Lync.Controls.Internal.ViewModel.ISortableContactsAndGroupManager</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T">To be added.</typeparam>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GroupByContactsAndGroupsManagerBase (Comparison&lt;Microsoft.Lync.Controls.Internal.Model.IContactModel&gt; comparison, System.Collections.Generic.IEnumerable&lt;Microsoft.Lync.Controls.Internal.Model.IGroupModel&gt; groups, System.Collections.Generic.List&lt;T&gt; groupsOrder, bool presenceAware);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Comparison`1&lt;class Microsoft.Lync.Controls.Internal.Model.IContactModel&gt; comparison, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Lync.Controls.Internal.Model.IGroupModel&gt; groups, class System.Collections.Generic.List`1&lt;!T&gt; groupsOrder, bool presenceAware) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Lync.Controls.Internal.ViewModel.GroupByContactsAndGroupsManagerBase`1.#ctor(System.Comparison{Microsoft.Lync.Controls.Internal.Model.IContactModel},System.Collections.Generic.IEnumerable{Microsoft.Lync.Controls.Internal.Model.IGroupModel},System.Collections.Generic.List{`0},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (comparison As Comparison(Of IContactModel), groups As IEnumerable(Of IGroupModel), groupsOrder As List(Of T), presenceAware As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GroupByContactsAndGroupsManagerBase(Comparison&lt;Microsoft::Lync::Controls::Internal::Model::IContactModel ^&gt; ^ comparison, System::Collections::Generic::IEnumerable&lt;Microsoft::Lync::Controls::Internal::Model::IGroupModel ^&gt; ^ groups, System::Collections::Generic::List&lt;T&gt; ^ groupsOrder, bool presenceAware);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Lync.Controls</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="comparison" Type="System.Comparison&lt;Microsoft.Lync.Controls.Internal.Model.IContactModel&gt;" />
        <Parameter Name="groups" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Lync.Controls.Internal.Model.IGroupModel&gt;" />
        <Parameter Name="groupsOrder" Type="System.Collections.Generic.List&lt;T&gt;" />
        <Parameter Name="presenceAware" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="comparison">To be added.</param>
        <param name="groups">To be added.</param>
        <param name="groupsOrder">To be added.</param>
        <param name="presenceAware">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddContactToGroup">
      <MemberSignature Language="C#" Value="protected void AddContactToGroup (Microsoft.Lync.Controls.Internal.Model.IContactModel contact, Microsoft.Lync.Controls.Internal.ViewModel.GroupByGroup groupByGroup);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AddContactToGroup(class Microsoft.Lync.Controls.Internal.Model.IContactModel contact, class Microsoft.Lync.Controls.Internal.ViewModel.GroupByGroup groupByGroup) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Lync.Controls.Internal.ViewModel.GroupByContactsAndGroupsManagerBase`1.AddContactToGroup(Microsoft.Lync.Controls.Internal.Model.IContactModel,Microsoft.Lync.Controls.Internal.ViewModel.GroupByGroup)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void AddContactToGroup(Microsoft::Lync::Controls::Internal::Model::IContactModel ^ contact, Microsoft::Lync::Controls::Internal::ViewModel::GroupByGroup ^ groupByGroup);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Lync.Controls</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contact" Type="Microsoft.Lync.Controls.Internal.Model.IContactModel" />
        <Parameter Name="groupByGroup" Type="Microsoft.Lync.Controls.Internal.ViewModel.GroupByGroup" />
      </Parameters>
      <Docs>
        <param name="contact">To be added.</param>
        <param name="groupByGroup">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddContactToGroup">
      <MemberSignature Language="C#" Value="protected void AddContactToGroup (T groupId, Microsoft.Lync.Controls.Internal.Model.IContactModel contact);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AddContactToGroup(!T groupId, class Microsoft.Lync.Controls.Internal.Model.IContactModel contact) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Lync.Controls.Internal.ViewModel.GroupByContactsAndGroupsManagerBase`1.AddContactToGroup(`0,Microsoft.Lync.Controls.Internal.Model.IContactModel)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub AddContactToGroup (groupId As T, contact As IContactModel)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void AddContactToGroup(T groupId, Microsoft::Lync::Controls::Internal::Model::IContactModel ^ contact);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Lync.Controls</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupId" Type="T" />
        <Parameter Name="contact" Type="Microsoft.Lync.Controls.Internal.Model.IContactModel" />
      </Parameters>
      <Docs>
        <param name="groupId">To be added.</param>
        <param name="contact">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddGroup">
      <MemberSignature Language="C#" Value="protected Microsoft.Lync.Controls.Internal.ViewModel.GroupByGroup AddGroup (T groupId, string groupName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class Microsoft.Lync.Controls.Internal.ViewModel.GroupByGroup AddGroup(!T groupId, string groupName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Lync.Controls.Internal.ViewModel.GroupByContactsAndGroupsManagerBase`1.AddGroup(`0,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function AddGroup (groupId As T, groupName As String) As GroupByGroup" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Microsoft::Lync::Controls::Internal::ViewModel::GroupByGroup ^ AddGroup(T groupId, System::String ^ groupName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Lync.Controls</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Lync.Controls.Internal.ViewModel.GroupByGroup</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupId" Type="T" />
        <Parameter Name="groupName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="groupId">To be added.</param>
        <param name="groupName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanExecuteCreateGroupCommand">
      <MemberSignature Language="C#" Value="protected virtual bool CanExecuteCreateGroupCommand (Microsoft.Lync.Controls.Internal.ViewModel.GroupByGroup group);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool CanExecuteCreateGroupCommand(class Microsoft.Lync.Controls.Internal.ViewModel.GroupByGroup group) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Lync.Controls.Internal.ViewModel.GroupByContactsAndGroupsManagerBase`1.CanExecuteCreateGroupCommand(Microsoft.Lync.Controls.Internal.ViewModel.GroupByGroup)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CanExecuteCreateGroupCommand (group As GroupByGroup) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool CanExecuteCreateGroupCommand(Microsoft::Lync::Controls::Internal::ViewModel::GroupByGroup ^ group);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Lync.Controls</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="group" Type="Microsoft.Lync.Controls.Internal.ViewModel.GroupByGroup" />
      </Parameters>
      <Docs>
        <param name="group">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanExecuteDeleteGroupCommand">
      <MemberSignature Language="C#" Value="protected virtual bool CanExecuteDeleteGroupCommand (Microsoft.Lync.Controls.Internal.ViewModel.GroupByGroup group);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool CanExecuteDeleteGroupCommand(class Microsoft.Lync.Controls.Internal.ViewModel.GroupByGroup group) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Lync.Controls.Internal.ViewModel.GroupByContactsAndGroupsManagerBase`1.CanExecuteDeleteGroupCommand(Microsoft.Lync.Controls.Internal.ViewModel.GroupByGroup)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CanExecuteDeleteGroupCommand (group As GroupByGroup) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool CanExecuteDeleteGroupCommand(Microsoft::Lync::Controls::Internal::ViewModel::GroupByGroup ^ group);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Lync.Controls</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="group" Type="Microsoft.Lync.Controls.Internal.ViewModel.GroupByGroup" />
      </Parameters>
      <Docs>
        <param name="group">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Comparison">
      <MemberSignature Language="C#" Value="protected Comparison&lt;Microsoft.Lync.Controls.Internal.Model.IContactModel&gt; Comparison { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Comparison`1&lt;class Microsoft.Lync.Controls.Internal.Model.IContactModel&gt; Comparison" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Lync.Controls.Internal.ViewModel.GroupByContactsAndGroupsManagerBase`1.Comparison" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Comparison As Comparison(Of IContactModel)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property Comparison&lt;Microsoft::Lync::Controls::Internal::Model::IContactModel ^&gt; ^ Comparison { Comparison&lt;Microsoft::Lync::Controls::Internal::Model::IContactModel ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Lync.Controls</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Comparison&lt;Microsoft.Lync.Controls.Internal.Model.IContactModel&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="protected bool Contains (Microsoft.Lync.Controls.Internal.Model.IContactModel contact);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool Contains(class Microsoft.Lync.Controls.Internal.Model.IContactModel contact) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Lync.Controls.Internal.ViewModel.GroupByContactsAndGroupsManagerBase`1.Contains(Microsoft.Lync.Controls.Internal.Model.IContactModel)" />
      <MemberSignature Language="VB.NET" Value="Protected Function Contains (contact As IContactModel) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool Contains(Microsoft::Lync::Controls::Internal::Model::IContactModel ^ contact);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Lync.Controls</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contact" Type="Microsoft.Lync.Controls.Internal.Model.IContactModel" />
      </Parameters>
      <Docs>
        <param name="contact">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateGroup">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.Lync.Controls.Internal.ViewModel.GroupByGroup CreateGroup (T groupId, string groupName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Microsoft.Lync.Controls.Internal.ViewModel.GroupByGroup CreateGroup(!T groupId, string groupName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Lync.Controls.Internal.ViewModel.GroupByContactsAndGroupsManagerBase`1.CreateGroup(`0,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateGroup (groupId As T, groupName As String) As GroupByGroup" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual Microsoft::Lync::Controls::Internal::ViewModel::GroupByGroup ^ CreateGroup(T groupId, System::String ^ groupName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Lync.Controls</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Lync.Controls.Internal.ViewModel.GroupByGroup</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupId" Type="T" />
        <Parameter Name="groupName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="groupId">To be added.</param>
        <param name="groupName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateGroupCommand">
      <MemberSignature Language="C#" Value="public System.Windows.Input.ICommand CreateGroupCommand { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.ICommand CreateGroupCommand" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Lync.Controls.Internal.ViewModel.GroupByContactsAndGroupsManagerBase`1.CreateGroupCommand" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CreateGroupCommand As ICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::ICommand ^ CreateGroupCommand { System::Windows::Input::ICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Lync.Controls</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateGroups">
      <MemberSignature Language="C#" Value="protected abstract void CreateGroups (System.Collections.Generic.IEnumerable&lt;Microsoft.Lync.Controls.Internal.Model.IGroupModel&gt; sourceGroups, System.Collections.Generic.List&lt;T&gt; groupsOrder);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void CreateGroups(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Lync.Controls.Internal.Model.IGroupModel&gt; sourceGroups, class System.Collections.Generic.List`1&lt;!T&gt; groupsOrder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Lync.Controls.Internal.ViewModel.GroupByContactsAndGroupsManagerBase`1.CreateGroups(System.Collections.Generic.IEnumerable{Microsoft.Lync.Controls.Internal.Model.IGroupModel},System.Collections.Generic.List{`0})" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub CreateGroups (sourceGroups As IEnumerable(Of IGroupModel), groupsOrder As List(Of T))" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void CreateGroups(System::Collections::Generic::IEnumerable&lt;Microsoft::Lync::Controls::Internal::Model::IGroupModel ^&gt; ^ sourceGroups, System::Collections::Generic::List&lt;T&gt; ^ groupsOrder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Lync.Controls</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceGroups" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Lync.Controls.Internal.Model.IGroupModel&gt;" />
        <Parameter Name="groupsOrder" Type="System.Collections.Generic.List&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="sourceGroups">To be added.</param>
        <param name="groupsOrder">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteGroupCommand">
      <MemberSignature Language="C#" Value="public System.Windows.Input.ICommand DeleteGroupCommand { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.ICommand DeleteGroupCommand" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Lync.Controls.Internal.ViewModel.GroupByContactsAndGroupsManagerBase`1.DeleteGroupCommand" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeleteGroupCommand As ICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::ICommand ^ DeleteGroupCommand { System::Windows::Input::ICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Lync.Controls</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Lync.Controls.Internal.ViewModel.GroupByContactsAndGroupsManagerBase`1.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Lync.Controls</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Lync.Controls.Internal.ViewModel.GroupByContactsAndGroupsManagerBase`1.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Lync.Controls</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteCreateGroupCommand">
      <MemberSignature Language="C#" Value="protected virtual void ExecuteCreateGroupCommand (Microsoft.Lync.Controls.Internal.ViewModel.GroupByGroup group);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ExecuteCreateGroupCommand(class Microsoft.Lync.Controls.Internal.ViewModel.GroupByGroup group) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Lync.Controls.Internal.ViewModel.GroupByContactsAndGroupsManagerBase`1.ExecuteCreateGroupCommand(Microsoft.Lync.Controls.Internal.ViewModel.GroupByGroup)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ExecuteCreateGroupCommand (group As GroupByGroup)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ExecuteCreateGroupCommand(Microsoft::Lync::Controls::Internal::ViewModel::GroupByGroup ^ group);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Lync.Controls</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="group" Type="Microsoft.Lync.Controls.Internal.ViewModel.GroupByGroup" />
      </Parameters>
      <Docs>
        <param name="group">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteDeleteGroupCommand">
      <MemberSignature Language="C#" Value="protected virtual void ExecuteDeleteGroupCommand (Microsoft.Lync.Controls.Internal.ViewModel.GroupByGroup group);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ExecuteDeleteGroupCommand(class Microsoft.Lync.Controls.Internal.ViewModel.GroupByGroup group) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Lync.Controls.Internal.ViewModel.GroupByContactsAndGroupsManagerBase`1.ExecuteDeleteGroupCommand(Microsoft.Lync.Controls.Internal.ViewModel.GroupByGroup)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ExecuteDeleteGroupCommand (group As GroupByGroup)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ExecuteDeleteGroupCommand(Microsoft::Lync::Controls::Internal::ViewModel::GroupByGroup ^ group);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Lync.Controls</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="group" Type="Microsoft.Lync.Controls.Internal.ViewModel.GroupByGroup" />
      </Parameters>
      <Docs>
        <param name="group">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentGroupId">
      <MemberSignature Language="C#" Value="protected T GetCurrentGroupId (Microsoft.Lync.Controls.Internal.Model.IContactModel contact);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance !T GetCurrentGroupId(class Microsoft.Lync.Controls.Internal.Model.IContactModel contact) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Lync.Controls.Internal.ViewModel.GroupByContactsAndGroupsManagerBase`1.GetCurrentGroupId(Microsoft.Lync.Controls.Internal.Model.IContactModel)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetCurrentGroupId (contact As IContactModel) As T" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; T GetCurrentGroupId(Microsoft::Lync::Controls::Internal::Model::IContactModel ^ contact);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Lync.Controls</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contact" Type="Microsoft.Lync.Controls.Internal.Model.IContactModel" />
      </Parameters>
      <Docs>
        <param name="contact">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGroupByGroup">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.Lync.Controls.Internal.ViewModel.GroupByGroup GetGroupByGroup (T groupId);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Microsoft.Lync.Controls.Internal.ViewModel.GroupByGroup GetGroupByGroup(!T groupId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Lync.Controls.Internal.ViewModel.GroupByContactsAndGroupsManagerBase`1.GetGroupByGroup(`0)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetGroupByGroup (groupId As T) As GroupByGroup" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual Microsoft::Lync::Controls::Internal::ViewModel::GroupByGroup ^ GetGroupByGroup(T groupId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Lync.Controls</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Lync.Controls.Internal.ViewModel.GroupByGroup</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupId" Type="T" />
      </Parameters>
      <Docs>
        <param name="groupId">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Groups">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.Lync.Controls.Internal.ViewModel.GroupByGroup&gt; Groups { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Lync.Controls.Internal.ViewModel.GroupByGroup&gt; Groups" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Lync.Controls.Internal.ViewModel.GroupByContactsAndGroupsManagerBase`1.Groups" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Groups As IEnumerable(Of GroupByGroup)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;Microsoft::Lync::Controls::Internal::ViewModel::GroupByGroup ^&gt; ^ Groups { System::Collections::Generic::IEnumerable&lt;Microsoft::Lync::Controls::Internal::ViewModel::GroupByGroup ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Lync.Controls.Internal.ViewModel.ISortableContactsAndGroupManager.Groups</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Lync.Controls</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.Lync.Controls.Internal.ViewModel.GroupByGroup&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HandleContactsCollectionChanged">
      <MemberSignature Language="C#" Value="protected void HandleContactsCollectionChanged (object sender, System.Collections.Specialized.NotifyCollectionChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void HandleContactsCollectionChanged(object sender, class System.Collections.Specialized.NotifyCollectionChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Lync.Controls.Internal.ViewModel.GroupByContactsAndGroupsManagerBase`1.HandleContactsCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub HandleContactsCollectionChanged (sender As Object, e As NotifyCollectionChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void HandleContactsCollectionChanged(System::Object ^ sender, System::Collections::Specialized::NotifyCollectionChangedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Lync.Controls</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Collections.Specialized.NotifyCollectionChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <param name="e">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveContactToGroup">
      <MemberSignature Language="C#" Value="protected void MoveContactToGroup (T groupId, Microsoft.Lync.Controls.Internal.Model.IContactModel contact);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void MoveContactToGroup(!T groupId, class Microsoft.Lync.Controls.Internal.Model.IContactModel contact) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Lync.Controls.Internal.ViewModel.GroupByContactsAndGroupsManagerBase`1.MoveContactToGroup(`0,Microsoft.Lync.Controls.Internal.Model.IContactModel)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub MoveContactToGroup (groupId As T, contact As IContactModel)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void MoveContactToGroup(T groupId, Microsoft::Lync::Controls::Internal::Model::IContactModel ^ contact);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Lync.Controls</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupId" Type="T" />
        <Parameter Name="contact" Type="Microsoft.Lync.Controls.Internal.Model.IContactModel" />
      </Parameters>
      <Docs>
        <param name="groupId">To be added.</param>
        <param name="contact">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveGroupDownCommand">
      <MemberSignature Language="C#" Value="public System.Windows.Input.ICommand MoveGroupDownCommand { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.ICommand MoveGroupDownCommand" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Lync.Controls.Internal.ViewModel.GroupByContactsAndGroupsManagerBase`1.MoveGroupDownCommand" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MoveGroupDownCommand As ICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::ICommand ^ MoveGroupDownCommand { System::Windows::Input::ICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Lync.Controls.Internal.ViewModel.ISortableContactsAndGroupManager.MoveGroupDownCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Lync.Controls</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveGroupUpCommand">
      <MemberSignature Language="C#" Value="public System.Windows.Input.ICommand MoveGroupUpCommand { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.ICommand MoveGroupUpCommand" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Lync.Controls.Internal.ViewModel.GroupByContactsAndGroupsManagerBase`1.MoveGroupUpCommand" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MoveGroupUpCommand As ICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::ICommand ^ MoveGroupUpCommand { System::Windows::Input::ICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Lync.Controls.Internal.ViewModel.ISortableContactsAndGroupManager.MoveGroupUpCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Lync.Controls</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSourceContactsAdded">
      <MemberSignature Language="C#" Value="protected abstract void OnSourceContactsAdded (System.Collections.Generic.IEnumerable&lt;Microsoft.Lync.Controls.Internal.Model.IContactModel&gt; contacts);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSourceContactsAdded(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Lync.Controls.Internal.Model.IContactModel&gt; contacts) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Lync.Controls.Internal.ViewModel.GroupByContactsAndGroupsManagerBase`1.OnSourceContactsAdded(System.Collections.Generic.IEnumerable{Microsoft.Lync.Controls.Internal.Model.IContactModel})" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub OnSourceContactsAdded (contacts As IEnumerable(Of IContactModel))" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void OnSourceContactsAdded(System::Collections::Generic::IEnumerable&lt;Microsoft::Lync::Controls::Internal::Model::IContactModel ^&gt; ^ contacts);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Lync.Controls</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contacts" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Lync.Controls.Internal.Model.IContactModel&gt;" />
      </Parameters>
      <Docs>
        <param name="contacts">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSourceContactsRemoved">
      <MemberSignature Language="C#" Value="protected abstract void OnSourceContactsRemoved (System.Collections.Generic.IEnumerable&lt;Microsoft.Lync.Controls.Internal.Model.IContactModel&gt; contacts);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSourceContactsRemoved(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Lync.Controls.Internal.Model.IContactModel&gt; contacts) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Lync.Controls.Internal.ViewModel.GroupByContactsAndGroupsManagerBase`1.OnSourceContactsRemoved(System.Collections.Generic.IEnumerable{Microsoft.Lync.Controls.Internal.Model.IContactModel})" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub OnSourceContactsRemoved (contacts As IEnumerable(Of IContactModel))" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void OnSourceContactsRemoved(System::Collections::Generic::IEnumerable&lt;Microsoft::Lync::Controls::Internal::Model::IContactModel ^&gt; ^ contacts);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Lync.Controls</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contacts" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Lync.Controls.Internal.Model.IContactModel&gt;" />
      </Parameters>
      <Docs>
        <param name="contacts">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSourceGroupsAdded">
      <MemberSignature Language="C#" Value="protected virtual void OnSourceGroupsAdded (System.Collections.Generic.IEnumerable&lt;Microsoft.Lync.Controls.Internal.Model.IGroupModel&gt; groups);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSourceGroupsAdded(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Lync.Controls.Internal.Model.IGroupModel&gt; groups) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Lync.Controls.Internal.ViewModel.GroupByContactsAndGroupsManagerBase`1.OnSourceGroupsAdded(System.Collections.Generic.IEnumerable{Microsoft.Lync.Controls.Internal.Model.IGroupModel})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSourceGroupsAdded (groups As IEnumerable(Of IGroupModel))" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSourceGroupsAdded(System::Collections::Generic::IEnumerable&lt;Microsoft::Lync::Controls::Internal::Model::IGroupModel ^&gt; ^ groups);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Lync.Controls</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groups" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Lync.Controls.Internal.Model.IGroupModel&gt;" />
      </Parameters>
      <Docs>
        <param name="groups">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSourceGroupsRemoved">
      <MemberSignature Language="C#" Value="protected virtual void OnSourceGroupsRemoved (System.Collections.Generic.IEnumerable&lt;Microsoft.Lync.Controls.Internal.Model.IGroupModel&gt; groups);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSourceGroupsRemoved(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Lync.Controls.Internal.Model.IGroupModel&gt; groups) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Lync.Controls.Internal.ViewModel.GroupByContactsAndGroupsManagerBase`1.OnSourceGroupsRemoved(System.Collections.Generic.IEnumerable{Microsoft.Lync.Controls.Internal.Model.IGroupModel})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSourceGroupsRemoved (groups As IEnumerable(Of IGroupModel))" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSourceGroupsRemoved(System::Collections::Generic::IEnumerable&lt;Microsoft::Lync::Controls::Internal::Model::IGroupModel ^&gt; ^ groups);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Lync.Controls</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groups" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Lync.Controls.Internal.Model.IGroupModel&gt;" />
      </Parameters>
      <Docs>
        <param name="groups">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnStatusAvailabilityChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnStatusAvailabilityChanged (Microsoft.Lync.Controls.Internal.Model.IContactModel contact, Microsoft.Lync.Controls.Internal.Model.StatusAvailability newValue);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStatusAvailabilityChanged(class Microsoft.Lync.Controls.Internal.Model.IContactModel contact, valuetype Microsoft.Lync.Controls.Internal.Model.StatusAvailability newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Lync.Controls.Internal.ViewModel.GroupByContactsAndGroupsManagerBase`1.OnStatusAvailabilityChanged(Microsoft.Lync.Controls.Internal.Model.IContactModel,Microsoft.Lync.Controls.Internal.Model.StatusAvailability)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStatusAvailabilityChanged (contact As IContactModel, newValue As StatusAvailability)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStatusAvailabilityChanged(Microsoft::Lync::Controls::Internal::Model::IContactModel ^ contact, Microsoft::Lync::Controls::Internal::Model::StatusAvailability newValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Lync.Controls</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contact" Type="Microsoft.Lync.Controls.Internal.Model.IContactModel" />
        <Parameter Name="newValue" Type="Microsoft.Lync.Controls.Internal.Model.StatusAvailability" />
      </Parameters>
      <Docs>
        <param name="contact">To be added.</param>
        <param name="newValue">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveContact">
      <MemberSignature Language="C#" Value="protected void RemoveContact (T groupId, Microsoft.Lync.Controls.Internal.Model.IContactModel contact);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RemoveContact(!T groupId, class Microsoft.Lync.Controls.Internal.Model.IContactModel contact) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Lync.Controls.Internal.ViewModel.GroupByContactsAndGroupsManagerBase`1.RemoveContact(`0,Microsoft.Lync.Controls.Internal.Model.IContactModel)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RemoveContact (groupId As T, contact As IContactModel)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RemoveContact(T groupId, Microsoft::Lync::Controls::Internal::Model::IContactModel ^ contact);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Lync.Controls</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupId" Type="T" />
        <Parameter Name="contact" Type="Microsoft.Lync.Controls.Internal.Model.IContactModel" />
      </Parameters>
      <Docs>
        <param name="groupId">To be added.</param>
        <param name="contact">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveContactFromAllGroups">
      <MemberSignature Language="C#" Value="protected void RemoveContactFromAllGroups (Microsoft.Lync.Controls.Internal.Model.IContactModel contact);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RemoveContactFromAllGroups(class Microsoft.Lync.Controls.Internal.Model.IContactModel contact) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Lync.Controls.Internal.ViewModel.GroupByContactsAndGroupsManagerBase`1.RemoveContactFromAllGroups(Microsoft.Lync.Controls.Internal.Model.IContactModel)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RemoveContactFromAllGroups (contact As IContactModel)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RemoveContactFromAllGroups(Microsoft::Lync::Controls::Internal::Model::IContactModel ^ contact);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Lync.Controls</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contact" Type="Microsoft.Lync.Controls.Internal.Model.IContactModel" />
      </Parameters>
      <Docs>
        <param name="contact">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveGroup">
      <MemberSignature Language="C#" Value="protected void RemoveGroup (T groupId);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RemoveGroup(!T groupId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Lync.Controls.Internal.ViewModel.GroupByContactsAndGroupsManagerBase`1.RemoveGroup(`0)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RemoveGroup (groupId As T)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RemoveGroup(T groupId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Lync.Controls</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupId" Type="T" />
      </Parameters>
      <Docs>
        <param name="groupId">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public void Sort (T groupId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Sort(!T groupId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Lync.Controls.Internal.ViewModel.GroupByContactsAndGroupsManagerBase`1.Sort(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Sort (groupId As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Sort(T groupId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Lync.Controls</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupId" Type="T" />
      </Parameters>
      <Docs>
        <param name="groupId">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public void Sort (Comparison&lt;Microsoft.Lync.Controls.Internal.Model.IContactModel&gt; comparison, bool presenceAware);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Sort(class System.Comparison`1&lt;class Microsoft.Lync.Controls.Internal.Model.IContactModel&gt; comparison, bool presenceAware) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Lync.Controls.Internal.ViewModel.GroupByContactsAndGroupsManagerBase`1.Sort(System.Comparison{Microsoft.Lync.Controls.Internal.Model.IContactModel},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Sort (comparison As Comparison(Of IContactModel), presenceAware As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Sort(Comparison&lt;Microsoft::Lync::Controls::Internal::Model::IContactModel ^&gt; ^ comparison, bool presenceAware);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Lync.Controls.Internal.ViewModel.ISortableContactsAndGroupManager.Sort(System.Comparison{Microsoft.Lync.Controls.Internal.Model.IContactModel},System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Lync.Controls</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparison" Type="System.Comparison&lt;Microsoft.Lync.Controls.Internal.Model.IContactModel&gt;" />
        <Parameter Name="presenceAware" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="comparison">To be added.</param>
        <param name="presenceAware">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>