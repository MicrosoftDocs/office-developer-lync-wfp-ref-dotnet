<Type Name="GroupByStatusContactsAndGroupsManager" FullName="Microsoft.Lync.Controls.Internal.ViewModel.GroupByStatusContactsAndGroupsManager">
  <TypeSignature Language="C#" Value="public class GroupByStatusContactsAndGroupsManager : Microsoft.Lync.Controls.Internal.ViewModel.GroupByContactsAndGroupsManagerBase&lt;Microsoft.Lync.Controls.Internal.Model.StatusAvailability&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit GroupByStatusContactsAndGroupsManager extends Microsoft.Lync.Controls.Internal.ViewModel.GroupByContactsAndGroupsManagerBase`1&lt;valuetype Microsoft.Lync.Controls.Internal.Model.StatusAvailability&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Lync.Controls.Internal.ViewModel.GroupByStatusContactsAndGroupsManager" />
  <TypeSignature Language="VB.NET" Value="Public Class GroupByStatusContactsAndGroupsManager&#xA;Inherits GroupByContactsAndGroupsManagerBase(Of StatusAvailability)" />
  <TypeSignature Language="C++ CLI" Value="public ref class GroupByStatusContactsAndGroupsManager : Microsoft::Lync::Controls::Internal::ViewModel::GroupByContactsAndGroupsManagerBase&lt;Microsoft::Lync::Controls::Internal::Model::StatusAvailability&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Lync.Controls</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Lync.Controls.Internal.ViewModel.GroupByContactsAndGroupsManagerBase&lt;Microsoft.Lync.Controls.Internal.Model.StatusAvailability&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="T">Microsoft.Lync.Controls.Internal.Model.StatusAvailability</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GroupByStatusContactsAndGroupsManager (Comparison&lt;Microsoft.Lync.Controls.Internal.Model.IContactModel&gt; comparison, System.Collections.Generic.IEnumerable&lt;Microsoft.Lync.Controls.Internal.Model.IGroupModel&gt; groups, System.Collections.Generic.List&lt;Microsoft.Lync.Controls.Internal.Model.StatusAvailability&gt; groupsOrder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Comparison`1&lt;class Microsoft.Lync.Controls.Internal.Model.IContactModel&gt; comparison, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Lync.Controls.Internal.Model.IGroupModel&gt; groups, class System.Collections.Generic.List`1&lt;valuetype Microsoft.Lync.Controls.Internal.Model.StatusAvailability&gt; groupsOrder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Lync.Controls.Internal.ViewModel.GroupByStatusContactsAndGroupsManager.#ctor(System.Comparison{Microsoft.Lync.Controls.Internal.Model.IContactModel},System.Collections.Generic.IEnumerable{Microsoft.Lync.Controls.Internal.Model.IGroupModel},System.Collections.Generic.List{Microsoft.Lync.Controls.Internal.Model.StatusAvailability})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (comparison As Comparison(Of IContactModel), groups As IEnumerable(Of IGroupModel), groupsOrder As List(Of StatusAvailability))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GroupByStatusContactsAndGroupsManager(Comparison&lt;Microsoft::Lync::Controls::Internal::Model::IContactModel ^&gt; ^ comparison, System::Collections::Generic::IEnumerable&lt;Microsoft::Lync::Controls::Internal::Model::IGroupModel ^&gt; ^ groups, System::Collections::Generic::List&lt;Microsoft::Lync::Controls::Internal::Model::StatusAvailability&gt; ^ groupsOrder);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Lync.Controls</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="comparison" Type="System.Comparison&lt;Microsoft.Lync.Controls.Internal.Model.IContactModel&gt;" />
        <Parameter Name="groups" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Lync.Controls.Internal.Model.IGroupModel&gt;" />
        <Parameter Name="groupsOrder" Type="System.Collections.Generic.List&lt;Microsoft.Lync.Controls.Internal.Model.StatusAvailability&gt;" />
      </Parameters>
      <Docs>
        <param name="comparison">To be added.</param>
        <param name="groups">To be added.</param>
        <param name="groupsOrder">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateGroups">
      <MemberSignature Language="C#" Value="protected override void CreateGroups (System.Collections.Generic.IEnumerable&lt;Microsoft.Lync.Controls.Internal.Model.IGroupModel&gt; sourceGroups, System.Collections.Generic.List&lt;Microsoft.Lync.Controls.Internal.Model.StatusAvailability&gt; groupsOrder);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CreateGroups(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Lync.Controls.Internal.Model.IGroupModel&gt; sourceGroups, class System.Collections.Generic.List`1&lt;valuetype Microsoft.Lync.Controls.Internal.Model.StatusAvailability&gt; groupsOrder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Lync.Controls.Internal.ViewModel.GroupByStatusContactsAndGroupsManager.CreateGroups(System.Collections.Generic.IEnumerable{Microsoft.Lync.Controls.Internal.Model.IGroupModel},System.Collections.Generic.List{Microsoft.Lync.Controls.Internal.Model.StatusAvailability})" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CreateGroups (sourceGroups As IEnumerable(Of IGroupModel), groupsOrder As List(Of StatusAvailability))" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CreateGroups(System::Collections::Generic::IEnumerable&lt;Microsoft::Lync::Controls::Internal::Model::IGroupModel ^&gt; ^ sourceGroups, System::Collections::Generic::List&lt;Microsoft::Lync::Controls::Internal::Model::StatusAvailability&gt; ^ groupsOrder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Lync.Controls</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceGroups" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Lync.Controls.Internal.Model.IGroupModel&gt;" />
        <Parameter Name="groupsOrder" Type="System.Collections.Generic.List&lt;Microsoft.Lync.Controls.Internal.Model.StatusAvailability&gt;" />
      </Parameters>
      <Docs>
        <param name="sourceGroups">To be added.</param>
        <param name="groupsOrder">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSourceContactsAdded">
      <MemberSignature Language="C#" Value="protected override void OnSourceContactsAdded (System.Collections.Generic.IEnumerable&lt;Microsoft.Lync.Controls.Internal.Model.IContactModel&gt; contacts);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnSourceContactsAdded(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Lync.Controls.Internal.Model.IContactModel&gt; contacts) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Lync.Controls.Internal.ViewModel.GroupByStatusContactsAndGroupsManager.OnSourceContactsAdded(System.Collections.Generic.IEnumerable{Microsoft.Lync.Controls.Internal.Model.IContactModel})" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnSourceContactsAdded (contacts As IEnumerable(Of IContactModel))" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnSourceContactsAdded(System::Collections::Generic::IEnumerable&lt;Microsoft::Lync::Controls::Internal::Model::IContactModel ^&gt; ^ contacts);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Lync.Controls</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contacts" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Lync.Controls.Internal.Model.IContactModel&gt;" />
      </Parameters>
      <Docs>
        <param name="contacts">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSourceContactsRemoved">
      <MemberSignature Language="C#" Value="protected override void OnSourceContactsRemoved (System.Collections.Generic.IEnumerable&lt;Microsoft.Lync.Controls.Internal.Model.IContactModel&gt; contacts);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnSourceContactsRemoved(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Lync.Controls.Internal.Model.IContactModel&gt; contacts) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Lync.Controls.Internal.ViewModel.GroupByStatusContactsAndGroupsManager.OnSourceContactsRemoved(System.Collections.Generic.IEnumerable{Microsoft.Lync.Controls.Internal.Model.IContactModel})" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnSourceContactsRemoved (contacts As IEnumerable(Of IContactModel))" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnSourceContactsRemoved(System::Collections::Generic::IEnumerable&lt;Microsoft::Lync::Controls::Internal::Model::IContactModel ^&gt; ^ contacts);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Lync.Controls</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contacts" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Lync.Controls.Internal.Model.IContactModel&gt;" />
      </Parameters>
      <Docs>
        <param name="contacts">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnStatusAvailabilityChanged">
      <MemberSignature Language="C#" Value="protected override void OnStatusAvailabilityChanged (Microsoft.Lync.Controls.Internal.Model.IContactModel contact, Microsoft.Lync.Controls.Internal.Model.StatusAvailability newValue);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnStatusAvailabilityChanged(class Microsoft.Lync.Controls.Internal.Model.IContactModel contact, valuetype Microsoft.Lync.Controls.Internal.Model.StatusAvailability newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Lync.Controls.Internal.ViewModel.GroupByStatusContactsAndGroupsManager.OnStatusAvailabilityChanged(Microsoft.Lync.Controls.Internal.Model.IContactModel,Microsoft.Lync.Controls.Internal.Model.StatusAvailability)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnStatusAvailabilityChanged (contact As IContactModel, newValue As StatusAvailability)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnStatusAvailabilityChanged(Microsoft::Lync::Controls::Internal::Model::IContactModel ^ contact, Microsoft::Lync::Controls::Internal::Model::StatusAvailability newValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Lync.Controls</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contact" Type="Microsoft.Lync.Controls.Internal.Model.IContactModel" />
        <Parameter Name="newValue" Type="Microsoft.Lync.Controls.Internal.Model.StatusAvailability" />
      </Parameters>
      <Docs>
        <param name="contact">To be added.</param>
        <param name="newValue">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>