<Type Name="ISortableContactsAndGroupManager" FullName="Microsoft.Lync.Controls.Internal.ViewModel.ISortableContactsAndGroupManager">
  <TypeSignature Language="C#" Value="public interface ISortableContactsAndGroupManager : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ISortableContactsAndGroupManager implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Lync.Controls.Internal.ViewModel.ISortableContactsAndGroupManager" />
  <TypeSignature Language="VB.NET" Value="Public Interface ISortableContactsAndGroupManager&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public interface class ISortableContactsAndGroupManager : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Lync.Controls</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Groups">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.Lync.Controls.Internal.ViewModel.GroupByGroup&gt; Groups { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Lync.Controls.Internal.ViewModel.GroupByGroup&gt; Groups" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Lync.Controls.Internal.ViewModel.ISortableContactsAndGroupManager.Groups" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Groups As IEnumerable(Of GroupByGroup)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;Microsoft::Lync::Controls::Internal::ViewModel::GroupByGroup ^&gt; ^ Groups { System::Collections::Generic::IEnumerable&lt;Microsoft::Lync::Controls::Internal::ViewModel::GroupByGroup ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Lync.Controls</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.Lync.Controls.Internal.ViewModel.GroupByGroup&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveGroupDownCommand">
      <MemberSignature Language="C#" Value="public System.Windows.Input.ICommand MoveGroupDownCommand { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.ICommand MoveGroupDownCommand" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Lync.Controls.Internal.ViewModel.ISortableContactsAndGroupManager.MoveGroupDownCommand" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MoveGroupDownCommand As ICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::ICommand ^ MoveGroupDownCommand { System::Windows::Input::ICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Lync.Controls</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveGroupUpCommand">
      <MemberSignature Language="C#" Value="public System.Windows.Input.ICommand MoveGroupUpCommand { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.ICommand MoveGroupUpCommand" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Lync.Controls.Internal.ViewModel.ISortableContactsAndGroupManager.MoveGroupUpCommand" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MoveGroupUpCommand As ICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::ICommand ^ MoveGroupUpCommand { System::Windows::Input::ICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Lync.Controls</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public void Sort (Comparison&lt;Microsoft.Lync.Controls.Internal.Model.IContactModel&gt; comparison, bool presenceAware);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Sort(class System.Comparison`1&lt;class Microsoft.Lync.Controls.Internal.Model.IContactModel&gt; comparison, bool presenceAware) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Lync.Controls.Internal.ViewModel.ISortableContactsAndGroupManager.Sort(System.Comparison{Microsoft.Lync.Controls.Internal.Model.IContactModel},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Sort (comparison As Comparison(Of IContactModel), presenceAware As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Sort(Comparison&lt;Microsoft::Lync::Controls::Internal::Model::IContactModel ^&gt; ^ comparison, bool presenceAware);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Lync.Controls</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparison" Type="System.Comparison&lt;Microsoft.Lync.Controls.Internal.Model.IContactModel&gt;" />
        <Parameter Name="presenceAware" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="comparison">To be added.</param>
        <param name="presenceAware">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>