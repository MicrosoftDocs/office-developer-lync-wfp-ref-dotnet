<Type Name="ContactBase" FullName="Microsoft.Lync.Controls.ContactBase">
  <TypeSignature Language="C#" Value="public abstract class ContactBase : Microsoft.Lync.Controls.UCBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ContactBase extends Microsoft.Lync.Controls.UCBase" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Lync.Controls.ContactBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ContactBase&#xA;Inherits UCBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class ContactBase abstract : Microsoft::Lync::Controls::UCBase" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Lync.Controls</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Lync.Controls.UCBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>             Reserved for internal use.             </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ContactBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Lync.Controls.ContactBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ContactBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Lync.Controls</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>             Constructs an instance of the ContactBase class.             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextualInformation">
      <MemberSignature Language="C#" Value="public Microsoft.Lync.Controls.ConversationContextualInfo ContextualInformation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Lync.Controls.ConversationContextualInfo ContextualInformation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Lync.Controls.ContactBase.ContextualInformation" />
      <MemberSignature Language="VB.NET" Value="Public Property ContextualInformation As ConversationContextualInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Lync::Controls::ConversationContextualInfo ^ ContextualInformation { Microsoft::Lync::Controls::ConversationContextualInfo ^ get(); void set(Microsoft::Lync::Controls::ConversationContextualInfo ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Lync.Controls</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Lync.Controls.ConversationContextualInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>             Gets or sets data structure which provides contextual information for use with the contextual conversation feature.             </summary>
        <value>To be added.</value>
        <remarks>
          <para>             Contextual information is provided to the destination user when a conversation is initiated.             This information may include a link or subject line which provides background on the purpose of a conversation.             Optionally, context may be delivered in the form of an application reference and embedded application data.             For more information, please refer to the related conceptual topics in the Lync SDK documentation.             </para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextualInformationProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ContextualInformationProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ContextualInformationProperty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Lync.Controls.ContactBase.ContextualInformationProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ContextualInformationProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ContextualInformationProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Lync.Controls</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>             Identifies the <see cref="P:Microsoft.Lync.Controls.ContactBase.ContextualInformation" /> dependency property.             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayName">
      <MemberSignature Language="C#" Value="public string DisplayName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Lync.Controls.ContactBase.DisplayName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DisplayName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DisplayName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Lync.Controls</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>             Gets the display name of this contact or distribution group.             </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayNameProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty DisplayNameProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty DisplayNameProperty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Lync.Controls.ContactBase.DisplayNameProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DisplayNameProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ DisplayNameProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Lync.Controls</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>             Identifies the <see cref="P:Microsoft.Lync.Controls.ContactBase.DisplayName" /> dependency property.             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsContactModelOwner">
      <MemberSignature Language="C#" Value="protected bool IsContactModelOwner { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsContactModelOwner" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Lync.Controls.ContactBase.IsContactModelOwner" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property IsContactModelOwner As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsContactModelOwner { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Lync.Controls</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>             Reserved for internal use.             </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Model">
      <MemberSignature Language="C#" Value="public Microsoft.Lync.Controls.Internal.Model.IContactModel Model { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Lync.Controls.Internal.Model.IContactModel Model" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Lync.Controls.ContactBase.Model" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Model As IContactModel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Lync::Controls::Internal::Model::IContactModel ^ Model { Microsoft::Lync::Controls::Internal::Model::IContactModel ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Lync.Controls</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Lync.Controls.Internal.Model.IContactModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>             Reserved for internal use.             </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ModelProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ModelProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ModelProperty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Lync.Controls.ContactBase.ModelProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ModelProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ModelProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Lync.Controls</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>             Identifies the <see cref="P:Microsoft.Lync.Controls.ContactBase.Model" /> dependency property.             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnApplyTemplate">
      <MemberSignature Language="C#" Value="public override void OnApplyTemplate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void OnApplyTemplate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Lync.Controls.ContactBase.OnApplyTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub OnApplyTemplate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void OnApplyTemplate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Lync.Controls</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>             When overridden in a derived class, is invoked whenever application code or              internal processes (such as a rebuilding layout pass)              call <see cref="ApplyTemplate" />.              In simplest terms, this means the method is called just before a UI element displays              in an application.              </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnClientDisconnected">
      <MemberSignature Language="C#" Value="protected override sealed void OnClientDisconnected ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnClientDisconnected() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Lync.Controls.ContactBase.OnClientDisconnected" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Sub OnClientDisconnected ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnClientDisconnected();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Lync.Controls</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>             Reserved for internal use.             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnContactPropertyChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnContactPropertyChanged (Microsoft.Lync.Controls.Internal.Model.IContactModel contactModel, string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnContactPropertyChanged(class Microsoft.Lync.Controls.Internal.Model.IContactModel contactModel, string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Lync.Controls.ContactBase.OnContactPropertyChanged(Microsoft.Lync.Controls.Internal.Model.IContactModel,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnContactPropertyChanged (contactModel As IContactModel, propertyName As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnContactPropertyChanged(Microsoft::Lync::Controls::Internal::Model::IContactModel ^ contactModel, System::String ^ propertyName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Lync.Controls</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contactModel" Type="Microsoft.Lync.Controls.Internal.Model.IContactModel" />
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="contactModel">To be added.</param>
        <param name="propertyName">To be added.</param>
        <summary>             Reserved for internal use.             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnContextualInformationChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnContextualInformationChanged (Microsoft.Lync.Controls.ConversationContextualInfo oldValue, Microsoft.Lync.Controls.ConversationContextualInfo newValue);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnContextualInformationChanged(class Microsoft.Lync.Controls.ConversationContextualInfo oldValue, class Microsoft.Lync.Controls.ConversationContextualInfo newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Lync.Controls.ContactBase.OnContextualInformationChanged(Microsoft.Lync.Controls.ConversationContextualInfo,Microsoft.Lync.Controls.ConversationContextualInfo)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnContextualInformationChanged (oldValue As ConversationContextualInfo, newValue As ConversationContextualInfo)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnContextualInformationChanged(Microsoft::Lync::Controls::ConversationContextualInfo ^ oldValue, Microsoft::Lync::Controls::ConversationContextualInfo ^ newValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Lync.Controls</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldValue" Type="Microsoft.Lync.Controls.ConversationContextualInfo" />
        <Parameter Name="newValue" Type="Microsoft.Lync.Controls.ConversationContextualInfo" />
      </Parameters>
      <Docs>
        <param name="oldValue">To be added.</param>
        <param name="newValue">To be added.</param>
        <summary>             Reserved for internal use.             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsSignedPropertyChanged">
      <MemberSignature Language="C#" Value="protected override void OnIsSignedPropertyChanged (bool oldValue, bool newValue);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnIsSignedPropertyChanged(bool oldValue, bool newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Lync.Controls.ContactBase.OnIsSignedPropertyChanged(System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnIsSignedPropertyChanged (oldValue As Boolean, newValue As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnIsSignedPropertyChanged(bool oldValue, bool newValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Lync.Controls</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldValue" Type="System.Boolean" />
        <Parameter Name="newValue" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="oldValue">To be added.</param>
        <param name="newValue">To be added.</param>
        <summary>             Reserved for internal use.             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPresenceItemsPropertyChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnPresenceItemsPropertyChanged (Microsoft.Lync.Controls.Internal.Model.IPresenceItems presenceItems, string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPresenceItemsPropertyChanged(class Microsoft.Lync.Controls.Internal.Model.IPresenceItems presenceItems, string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Lync.Controls.ContactBase.OnPresenceItemsPropertyChanged(Microsoft.Lync.Controls.Internal.Model.IPresenceItems,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPresenceItemsPropertyChanged (presenceItems As IPresenceItems, propertyName As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPresenceItemsPropertyChanged(Microsoft::Lync::Controls::Internal::Model::IPresenceItems ^ presenceItems, System::String ^ propertyName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Lync.Controls</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="presenceItems" Type="Microsoft.Lync.Controls.Internal.Model.IPresenceItems" />
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="presenceItems">To be added.</param>
        <param name="propertyName">To be added.</param>
        <summary>             Reserved for internal use.             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSourceChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSourceChanged (object oldSource, object newSource);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSourceChanged(object oldSource, object newSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Lync.Controls.ContactBase.OnSourceChanged(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSourceChanged (oldSource As Object, newSource As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSourceChanged(System::Object ^ oldSource, System::Object ^ newSource);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Lync.Controls</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldSource" Type="System.Object" />
        <Parameter Name="newSource" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="oldSource">To be added.</param>
        <param name="newSource">To be added.</param>
        <summary>             Reserved for internal use.             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnUnloaded">
      <MemberSignature Language="C#" Value="protected override void OnUnloaded ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnUnloaded() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Lync.Controls.ContactBase.OnUnloaded" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnUnloaded ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnUnloaded();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Lync.Controls</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>             Reserved for internal use.             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public object Source { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Source" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Lync.Controls.ContactBase.Source" />
      <MemberSignature Language="VB.NET" Value="Public Property Source As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Source { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Lync.Controls</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>             Specifies a contact or distribution group to which this control should be bound.             </summary>
        <value>To be added.</value>
        <remarks>
          <para>             Valid values for this property include:             TypeValuestringSearch fragment, such as <see cref="mary" />stringSIP URI, such as <see cref="sip:mary@contoso.com" />Contact<see cref="T:Microsoft.Lync.Model.Contact" /> object, obtained using the Lync Platform API.DistributionGroup<see cref="T:Microsoft.Lync.Model.Group.DistributionGroup" /> object, obtained using the Lync Platform API.DistributionGroup                          These options are shown in increasing order of performance.             If a search fragment is used,  the control will perform a best-effort match (non-deterministic)              </para>
          <para />
        </remarks>
        <exception cref="T:System.ArgumentException">Thrown when an invalid object type is provided.</exception>
      </Docs>
    </Member>
    <Member MemberName="SourceProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SourceProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SourceProperty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Lync.Controls.ContactBase.SourceProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SourceProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SourceProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Lync.Controls</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>             Identifies the <see cref="P:Microsoft.Lync.Controls.ContactBase.Source" /> dependency property.             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnwireModel">
      <MemberSignature Language="C#" Value="protected virtual void UnwireModel (Microsoft.Lync.Controls.Internal.Model.IContactModel contactModel);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void UnwireModel(class Microsoft.Lync.Controls.Internal.Model.IContactModel contactModel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Lync.Controls.ContactBase.UnwireModel(Microsoft.Lync.Controls.Internal.Model.IContactModel)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub UnwireModel (contactModel As IContactModel)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void UnwireModel(Microsoft::Lync::Controls::Internal::Model::IContactModel ^ contactModel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Lync.Controls</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contactModel" Type="Microsoft.Lync.Controls.Internal.Model.IContactModel" />
      </Parameters>
      <Docs>
        <param name="contactModel">To be added.</param>
        <summary>             Reserved for internal use.             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnwirePresenceItems">
      <MemberSignature Language="C#" Value="protected virtual void UnwirePresenceItems (Microsoft.Lync.Controls.Internal.Model.IPresenceItems presenceItems);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void UnwirePresenceItems(class Microsoft.Lync.Controls.Internal.Model.IPresenceItems presenceItems) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Lync.Controls.ContactBase.UnwirePresenceItems(Microsoft.Lync.Controls.Internal.Model.IPresenceItems)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub UnwirePresenceItems (presenceItems As IPresenceItems)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void UnwirePresenceItems(Microsoft::Lync::Controls::Internal::Model::IPresenceItems ^ presenceItems);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Lync.Controls</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="presenceItems" Type="Microsoft.Lync.Controls.Internal.Model.IPresenceItems" />
      </Parameters>
      <Docs>
        <param name="presenceItems">To be added.</param>
        <summary>             Reserved for internal use.             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WireModel">
      <MemberSignature Language="C#" Value="protected virtual void WireModel (Microsoft.Lync.Controls.Internal.Model.IContactModel contactModel);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void WireModel(class Microsoft.Lync.Controls.Internal.Model.IContactModel contactModel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Lync.Controls.ContactBase.WireModel(Microsoft.Lync.Controls.Internal.Model.IContactModel)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub WireModel (contactModel As IContactModel)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void WireModel(Microsoft::Lync::Controls::Internal::Model::IContactModel ^ contactModel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Lync.Controls</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contactModel" Type="Microsoft.Lync.Controls.Internal.Model.IContactModel" />
      </Parameters>
      <Docs>
        <param name="contactModel">To be added.</param>
        <summary>             Reserved for internal use.             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WirePresenceItems">
      <MemberSignature Language="C#" Value="protected virtual void WirePresenceItems (Microsoft.Lync.Controls.Internal.Model.IPresenceItems presenceItems);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void WirePresenceItems(class Microsoft.Lync.Controls.Internal.Model.IPresenceItems presenceItems) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Lync.Controls.ContactBase.WirePresenceItems(Microsoft.Lync.Controls.Internal.Model.IPresenceItems)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub WirePresenceItems (presenceItems As IPresenceItems)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void WirePresenceItems(Microsoft::Lync::Controls::Internal::Model::IPresenceItems ^ presenceItems);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Lync.Controls</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="presenceItems" Type="Microsoft.Lync.Controls.Internal.Model.IPresenceItems" />
      </Parameters>
      <Docs>
        <param name="presenceItems">To be added.</param>
        <summary>             Reserved for internal use.             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WireUCClient">
      <MemberSignature Language="C#" Value="protected override sealed void WireUCClient (Microsoft.Lync.Controls.Internal.Model.IUCClientModel ucClientModel);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void WireUCClient(class Microsoft.Lync.Controls.Internal.Model.IUCClientModel ucClientModel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Lync.Controls.ContactBase.WireUCClient(Microsoft.Lync.Controls.Internal.Model.IUCClientModel)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Sub WireUCClient (ucClientModel As IUCClientModel)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void WireUCClient(Microsoft::Lync::Controls::Internal::Model::IUCClientModel ^ ucClientModel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Lync.Controls</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ucClientModel" Type="Microsoft.Lync.Controls.Internal.Model.IUCClientModel" />
      </Parameters>
      <Docs>
        <param name="ucClientModel">To be added.</param>
        <summary>             Reserved for internal use.             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>