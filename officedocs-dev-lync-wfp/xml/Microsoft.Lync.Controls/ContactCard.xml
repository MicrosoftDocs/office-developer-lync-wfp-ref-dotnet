<Type Name="ContactCard" FullName="Microsoft.Lync.Controls.ContactCard">
  <TypeSignature Language="C#" Value="public class ContactCard : Microsoft.Lync.Controls.ContactBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi ContactCard extends Microsoft.Lync.Controls.ContactBase" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Lync.Controls.ContactCard" />
  <TypeSignature Language="VB.NET" Value="Public Class ContactCard&#xA;Inherits ContactBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class ContactCard : Microsoft::Lync::Controls::ContactBase" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Lync.Controls</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Lync.Controls.ContactBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.TemplatePart(Name="PART_NoteContainer", Type=typeof(System.Windows.FrameworkElement))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.TemplatePart(Name="PART_ExpandDetailsToggleButton", Type=typeof(System.Windows.Controls.Primitives.ToggleButton))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.TemplatePart(Name="PART_DetailsContainer", Type=typeof(System.Windows.FrameworkElement))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>             The ContactCard control shows basic or detailed contact and organization information for contacts.             </summary>
    <remarks>
      <para>             This control displays a contact card for a person or distribution group, specified by the             <see cref="" /> property.  The card can optionally be <see cref="P:Microsoft.Lync.Controls.ContactCard.IsExpanded" />,             to reveal a set of <see cref="P:Microsoft.Lync.Controls.ContactCard.SelectedTabIndex" /> which show detailed information about the contact.              This control displays presence and availability of colleagues, and gives users the ability to start              instant message sessions, voice calls, file transfers, application sharing sessions, or conference calls.             </para>
      <para />
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContactCard ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Lync.Controls.ContactCard.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ContactCard();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Lync.Controls</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>             Initializes a new instance of the <see cref="ContactCard" /> class.             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpanderVisibility">
      <MemberSignature Language="C#" Value="public System.Windows.Visibility ExpanderVisibility { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Visibility ExpanderVisibility" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Lync.Controls.ContactCard.ExpanderVisibility" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExpanderVisibility As Visibility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Visibility ExpanderVisibility { System::Windows::Visibility get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Lync.Controls</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Visibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>             Gets the <see cref="Visibility" /> state of the expander button.             </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpanderVisibilityProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ExpanderVisibilityProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ExpanderVisibilityProperty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Lync.Controls.ContactCard.ExpanderVisibilityProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ExpanderVisibilityProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ExpanderVisibilityProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Lync.Controls</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>             Identifies the ExpanderVisibility dependency property.             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsExpanded">
      <MemberSignature Language="C#" Value="public bool IsExpanded { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsExpanded" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Lync.Controls.ContactCard.IsExpanded" />
      <MemberSignature Language="VB.NET" Value="Public Property IsExpanded As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsExpanded { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Lync.Controls</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>             Get or sets whether the details section of the contact card is collapsed or expanded.             </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsExpandedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsExpandedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsExpandedProperty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Lync.Controls.ContactCard.IsExpandedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsExpandedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsExpandedProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Lync.Controls</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>             Identifies the IsExpanded dependency property.             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnApplyTemplate">
      <MemberSignature Language="C#" Value="public override void OnApplyTemplate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void OnApplyTemplate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Lync.Controls.ContactCard.OnApplyTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub OnApplyTemplate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void OnApplyTemplate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Lync.Controls</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>             Overrides the OnApplyTemplate method to build the visual tree for the expander control when a new              template is applied.             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Lync.Controls.ContactCard.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Lync.Controls</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>             Overrides the OnCreateAutomationPeer method to return the ContactCardAutomationPeer object.             </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedTabIndex">
      <MemberSignature Language="C#" Value="public int SelectedTabIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectedTabIndex" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Lync.Controls.ContactCard.SelectedTabIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectedTabIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SelectedTabIndex { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Lync.Controls</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>             Gets or sets the index of the tab item to display when the contact card is expanded.             </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedTabIndexProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SelectedTabIndexProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SelectedTabIndexProperty" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Lync.Controls.ContactCard.SelectedTabIndexProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SelectedTabIndexProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SelectedTabIndexProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Lync.Controls</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>             Identifies the SelectedTabIndex dependency property.             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WireModel">
      <MemberSignature Language="C#" Value="protected override sealed void WireModel (Microsoft.Lync.Controls.Internal.Model.IContactModel contactModel);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void WireModel(class Microsoft.Lync.Controls.Internal.Model.IContactModel contactModel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Lync.Controls.ContactCard.WireModel(Microsoft.Lync.Controls.Internal.Model.IContactModel)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Sub WireModel (contactModel As IContactModel)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void WireModel(Microsoft::Lync::Controls::Internal::Model::IContactModel ^ contactModel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Lync.Controls</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contactModel" Type="Microsoft.Lync.Controls.Internal.Model.IContactModel" />
      </Parameters>
      <Docs>
        <param name="contactModel">To be added.</param>
        <summary>             Reserved for internal use.             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>