<Type Name="IsTypingChangedEventArgs" FullName="Microsoft.Lync.Model.Conversation.IsTypingChangedEventArgs">
  <TypeSignature Language="C#" Value="public class IsTypingChangedEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit IsTypingChangedEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Lync.Model.Conversation.IsTypingChangedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class IsTypingChangedEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class IsTypingChangedEventArgs : EventArgs" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Lync.Model</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Represents the event data of a IsTypingChanged event.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="IsTyping">
      <MemberSignature Language="C#" Value="public bool IsTyping { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTyping" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Lync.Model.Conversation.IsTypingChangedEventArgs.IsTyping" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsTyping As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsTyping { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Lync.Model</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the new value of is composing flag for the source endpoint.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>