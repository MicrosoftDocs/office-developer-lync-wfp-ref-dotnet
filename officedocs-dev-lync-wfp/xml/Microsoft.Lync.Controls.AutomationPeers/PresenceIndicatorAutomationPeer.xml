<Type Name="PresenceIndicatorAutomationPeer" FullName="Microsoft.Lync.Controls.AutomationPeers.PresenceIndicatorAutomationPeer">
  <TypeSignature Language="C#" Value="public class PresenceIndicatorAutomationPeer : Microsoft.Lync.Controls.Internal.AutomationPeers.ContactBaseAutomationPeer&lt;Microsoft.Lync.Controls.PresenceIndicator&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PresenceIndicatorAutomationPeer extends Microsoft.Lync.Controls.Internal.AutomationPeers.ContactBaseAutomationPeer`1&lt;class Microsoft.Lync.Controls.PresenceIndicator&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Lync.Controls.AutomationPeers.PresenceIndicatorAutomationPeer" />
  <TypeSignature Language="VB.NET" Value="Public Class PresenceIndicatorAutomationPeer&#xA;Inherits ContactBaseAutomationPeer(Of PresenceIndicator)" />
  <TypeSignature Language="C++ CLI" Value="public ref class PresenceIndicatorAutomationPeer : Microsoft::Lync::Controls::Internal::AutomationPeers::ContactBaseAutomationPeer&lt;Microsoft::Lync::Controls::PresenceIndicator ^&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Lync.Controls</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Lync.Controls.Internal.AutomationPeers.ContactBaseAutomationPeer&lt;Microsoft.Lync.Controls.PresenceIndicator&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="T">Microsoft.Lync.Controls.PresenceIndicator</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <summary>             PresenceIndicatorAutomationPeer class             </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PresenceIndicatorAutomationPeer (Microsoft.Lync.Controls.PresenceIndicator control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Lync.Controls.PresenceIndicator control) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Lync.Controls.AutomationPeers.PresenceIndicatorAutomationPeer.#ctor(Microsoft.Lync.Controls.PresenceIndicator)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (control As PresenceIndicator)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PresenceIndicatorAutomationPeer(Microsoft::Lync::Controls::PresenceIndicator ^ control);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Lync.Controls</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="control" Type="Microsoft.Lync.Controls.PresenceIndicator" />
      </Parameters>
      <Docs>
        <param name="control">To be added.</param>
        <summary>             PresenceIndicatorAutomationPeer Constructor             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBoundingRectangleCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Rect GetBoundingRectangleCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Windows.Rect GetBoundingRectangleCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Lync.Controls.AutomationPeers.PresenceIndicatorAutomationPeer.GetBoundingRectangleCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetBoundingRectangleCore () As Rect" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Rect GetBoundingRectangleCore();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Lync.Controls</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>             Override <see cref="GetBoundingRectangleCore" /> to return the indicator's position and size             </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>             In Silverlight, Viewbox does not allow for an automation client to find             the size of it's underlying contents, so we manually do the computation             and expose it through the override.             In WPF, we can rely on FrameworkElement's implementation of <see cref="GetBoundingRectangleCore" /></para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHelpTextCore">
      <MemberSignature Language="C#" Value="protected override string GetHelpTextCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string GetHelpTextCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Lync.Controls.AutomationPeers.PresenceIndicatorAutomationPeer.GetHelpTextCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetHelpTextCore () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::String ^ GetHelpTextCore();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Lync.Controls</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>             Override GetHelpTextCore.             </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>